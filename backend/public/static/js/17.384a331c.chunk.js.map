{"version":3,"sources":["components/FilesDropzone.js","views/stores/productCreate/Header.js","views/stores/productCreate/ProductCreateForm.js","views/stores/productCreate/index.js"],"names":["useStyles","makeStyles","theme","root","display","dropZone","border","palette","divider","outline","justifyContent","flexWrap","alignItems","backgroundColor","action","hover","opacity","cursor","dragActive","active","image","width","content","textAlign","FilesDropzone","className","value","avatar","rest","classes","useState","files","setFiles","preview","setPreview","useEffect","handleDrop","useCallback","acceptedFiles","objectUrl","URL","createObjectURL","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","clsx","container","item","lg","md","sm","alt","src","height","gutterBottom","variant","marginLeft","Header","Grid","justify","spacing","Breadcrumbs","separator","fontSize","aria-label","Link","color","to","component","RouterLink","Typography","Button","editor","ProductCreateForm","history","useHistory","enqueueSnackbar","useSnackbar","initialValues","images","name","amount","price","salePrice","validationSchema","Yup","shape","max","required","nullable","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","formData","FormData","append","axios","post","API_BASE_URL","headers","then","res","success","data","message","push","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Card","CardHeader","title","Divider","CardContent","TextField","style","marginBottom","error","Boolean","fullWidth","helperText","label","type","onBlur","onChange","Box","mt","FormHelperText","xs","disabled","background","dark","minHeight","paddingTop","paddingBottom","ProductCreateView","Page","Container","maxWidth","marginTop"],"mappings":"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","file":"static/js/17.384a331c.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display:'flex',\n\n  },\n  dropZone: {\n    border: `2px dashed ${theme.palette.divider}`,\n    outline: 'none',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    display:'flex',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5\n  },\n  image: {\n    width: 80\n  },\n  content:{\n    textAlign:'center'\n  }\n\n}));\n\nfunction FilesDropzone({ className, value, avatar, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n   const [preview, setPreview] = useState(avatar);\n\n  useEffect(()=>{\n   value(files);\n  },[files])\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    setFiles(acceptedFiles[0]);\n    const objectUrl = URL.createObjectURL(acceptedFiles[0]);\n    setPreview(objectUrl);\n    \n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      {...rest}\n    >\n      <Grid item lg={6} md={6} sm={12}  className={classes.content}>\n        <img alt='No selected!' src={preview} width=\"200px\" height=\"150px\"/>\n      </Grid>\n      <Grid\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive\n        })}\n        item lg={6} md={6} sm={12}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"/static/images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Select product image\n          </Typography>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {marginLeft:'30px',\n  width:'95%'}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Stores\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Create Products\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Please Create a new product!\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          component={RouterLink}\n          to=\"/app/stores/productList\"\n        >\n          Cancel\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport FilesDropzone from 'src/components/FilesDropzone';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 400\n    }\n  }\n}));\n\nfunction ProductCreateForm({ className, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        images: \"\",\n        name: '',\n        amount:'',\n        price: '',\n        salePrice: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(255).required('name is required'),\n        images:Yup.string().nullable().required('Image must be required'),\n        amount: Yup.string().max(255).required('amount is required'),\n        price: Yup.number().min(0).required('price is required'),\n        salePrice: Yup.number().min(0).required('salePrice is required'),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {        \n\n          var formData = new FormData();\n\n        formData.append('image', values.images);\n\n       await axios.post(API_BASE_URL + 'product/create', formData, {\n          headers: {\n             'name':values.name,\n             'amount':values.amount,\n             'price':values.price,\n             'saleprice':values.salePrice\n          }\n        }).then(res => {\n\n            setStatus({ success: true });\n            setSubmitting(false);\n            enqueueSnackbar(res.data.message, {\n              variant: 'success'\n            });\n            history.push('/app/stores/productList');\n\n        })\n\n        } catch (err) {\n          setErrors({ submit: err.message });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n\n              <Card>\n              <CardHeader title=\"Name and Amout\" />\n              <Divider />\n                <CardContent>\n                  <TextField\n                  style={{marginBottom:'20px'}}\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Product Name\"\n                    name=\"name\"\n                    type=\"string\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                   <TextField\n                    error={Boolean(touched.amount && errors.amount)}\n                    fullWidth\n                    helperText={touched.amount && errors.amount}\n                    label=\"Products Amount\"\n                    name=\"amount\"\n                    type=\"string\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.amount}\n                    variant=\"outlined\"\n                  />\n                </CardContent>\n              </Card>\n              <Box mt={3}>\n                <Card>\n                  <CardHeader title=\"Upload Images\" />\n                  <Divider />\n                  <CardContent>\n                    <FilesDropzone \n                    name=\"images\" value={(images)=>{setFieldValue('images', images)}} avatar={\"\"}/>\n                  {(touched.images && errors.images) && (\n                    <Box mt={2}>\n                      <FormHelperText error>\n                        {errors.images}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                  </CardContent>\n                </Card>\n              </Box>\n              <Box mt={3}>\n                <Card>\n                  <CardHeader title=\"Prices\" />\n                  <Divider />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={3}\n                    >\n                      <Grid item xs={12} md={6}>\n                        <TextField\n                          error={Boolean(touched.price && errors.price)}\n                          fullWidth\n                          helperText={(touched.price && errors.price)}\n                          label=\"Price($)\"\n                          name=\"price\"\n                          type=\"number\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.price}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <TextField\n                          error={Boolean(touched.salePrice && errors.salePrice)}\n                          fullWidth\n                          helperText={touched.salePrice && errors.salePrice}\n                          label=\"Sale price($)\"\n                          name=\"salePrice\"\n                          type=\"number\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.salePrice}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Box>\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Create product\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nProductCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProductCreateForm;\n","import React from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport ProductCreateForm from './ProductCreateForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    justifyContent:'center',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nfunction ProductCreateView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Product Create\"\n    >\n       <Header />\n      <Container maxWidth='md' style={{marginTop:'50px'}}>\n        <ProductCreateForm />\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProductCreateView;\n"],"sourceRoot":""}