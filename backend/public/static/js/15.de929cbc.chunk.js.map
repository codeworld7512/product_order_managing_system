{"version":3,"sources":["hooks/useIsMountedRef.js","components/FilesDropzone.js","views/stores/ProductEdit/Header.js","views/stores/ProductEdit/ProductCreateForm.js","views/stores/ProductEdit/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","display","dropZone","border","palette","divider","outline","justifyContent","flexWrap","alignItems","backgroundColor","action","hover","opacity","cursor","dragActive","active","image","width","content","textAlign","FilesDropzone","className","value","avatar","rest","classes","useState","files","setFiles","preview","setPreview","handleDrop","useCallback","acceptedFiles","objectUrl","URL","createObjectURL","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","clsx","container","item","lg","md","sm","alt","src","height","gutterBottom","variant","marginLeft","Header","Grid","justify","spacing","Breadcrumbs","separator","fontSize","aria-label","Link","color","to","component","RouterLink","Typography","Button","editor","ProductCreateForm","product","history","useHistory","enqueueSnackbar","useSnackbar","initialValues","images","name","amount","price","salePrice","saleprice","validationSchema","Yup","shape","max","required","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","length","formData","FormData","append","axios","post","API_BASE_URL","headers","_id","then","res","success","data","message","push","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Card","CardHeader","title","Divider","CardContent","TextField","style","marginBottom","error","Boolean","fullWidth","helperText","label","type","onBlur","onChange","Box","mt","xs","FormHelperText","disabled","background","dark","minHeight","paddingTop","paddingBottom","ProductCreateView","id","useParams","Id","isMountedRef","setProduct","getInvoices","response","Page","Container","maxWidth","marginTop"],"mappings":"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","file":"static/js/15.de929cbc.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display:'flex',\n\n  },\n  dropZone: {\n    border: `2px dashed ${theme.palette.divider}`,\n    outline: 'none',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    display:'flex',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5\n  },\n  image: {\n    width: 80\n  },\n  content:{\n    textAlign:'center'\n  }\n\n}));\n\nfunction FilesDropzone({ className, value, avatar, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n   const [preview, setPreview] = useState(avatar);\n\n  useEffect(()=>{\n   value(files);\n  },[files])\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    setFiles(acceptedFiles[0]);\n    const objectUrl = URL.createObjectURL(acceptedFiles[0]);\n    setPreview(objectUrl);\n    \n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      {...rest}\n    >\n      <Grid item lg={6} md={6} sm={12}  className={classes.content}>\n        <img alt='No selected!' src={preview} width=\"200px\" height=\"150px\"/>\n      </Grid>\n      <Grid\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive\n        })}\n        item lg={6} md={6} sm={12}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"/static/images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Select product image\n          </Typography>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {marginLeft:'30px',\n  width:'95%'}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Stores\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Edit Products\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Please Edit this product!\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          component={RouterLink}\n          to=\"/app/stores/productList\"\n        >\n          Cancel\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport FilesDropzone from 'src/components/FilesDropzone';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n  },\n  editor: {\n    '& .ql-editor': {\n      height: 400\n    }\n  }\n}));\n\nfunction ProductCreateForm({ className, product, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        images: '',\n        name: product.name,\n        amount:product.amount,\n        price: product.price,\n        salePrice: product.saleprice\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(255).required('name is required'),\n        amount: Yup.string().max(255).required('amount is required'),\n        price: Yup.number().min(0).required('price is required'),\n        salePrice: Yup.number().min(0).required('salePrice is required'),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {      \n          if(values.images.length!== 0)  \n            {\n\n              var formData = new FormData();\n\n            formData.append('image', values.images);\n\n          await axios.post(API_BASE_URL + 'product/update', formData, {\n              headers: {\n                  'id':product._id,\n                'name':values.name,\n                'amount':values.amount,\n                'price':values.price,\n                'saleprice':values.salePrice\n              }\n            }).then(res => {\n\n                setStatus({ success: true });\n                setSubmitting(false);\n                enqueueSnackbar(res.data.message, {\n                  variant: 'success'\n                });\n                history.push('/app/stores/productList');\n\n            })}\n            else{\n              await axios.post(API_BASE_URL + 'product/update/noimage',  {\n                    'id':product._id,\n                  'name':values.name,\n                  'amount':values.amount,\n                  'price':values.price,\n                  'saleprice':values.salePrice\n              }).then(res => {\n  \n                  setStatus({ success: true });\n                  setSubmitting(false);\n                  enqueueSnackbar(res.data.message, {\n                    variant: 'success'\n                  });\n                  history.push('/app/stores/productList');\n  \n              })\n            }\n\n        } catch (err) {\n          setErrors({ submit: err.message });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n\n              <Card>\n              <CardHeader title=\"Name and Amout\" />\n              <Divider />\n                <CardContent>\n                  <TextField\n                  style={{marginBottom:'20px'}}\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Product Name\"\n                    name=\"name\"\n                    type=\"string\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                   <TextField\n                    error={Boolean(touched.amount && errors.amount)}\n                    fullWidth\n                    helperText={touched.amount && errors.amount}\n                    label=\"Products Amount\"\n                    name=\"amount\"\n                    type=\"string\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.amount}\n                    variant=\"outlined\"\n                  />\n                </CardContent>\n              </Card>\n              <Box mt={3}>\n                <Card>\n                  <CardHeader title=\"Upload Images\" />\n                  <Divider />\n                  <CardContent>\n                    <FilesDropzone \n                    name=\"images\" value={(images)=>{setFieldValue('images', images)}} avatar={product.avatar}/>\n                  </CardContent>\n                </Card>\n              </Box>\n              <Box mt={3}>\n                <Card>\n                  <CardHeader title=\"Prices\" />\n                  <Divider />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={3}\n                    >\n                      <Grid item xs={12} md={6}>\n                        <TextField\n                          error={Boolean(touched.price && errors.price)}\n                          fullWidth\n                          helperText={(touched.price && errors.price)}\n                          label=\"Price($)\"\n                          name=\"price\"\n                          type=\"number\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.price}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item xs={12} md={6}>\n                        <TextField\n                          error={Boolean(touched.salePrice && errors.salePrice)}\n                          fullWidth\n                          helperText={touched.salePrice && errors.salePrice}\n                          label=\"Sale price($)\"\n                          name=\"salePrice\"\n                          type=\"number\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.salePrice}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Box>\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n               Update\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nProductCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProductCreateForm;\n","import React,{  useState, useEffect, useCallback} from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport ProductCreateForm from './ProductCreateForm';\nimport { useParams } from 'react-router-dom';\nimport { API_BASE_URL } from 'src/config';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    justifyContent:'center',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nfunction ProductCreateView() {\n  const classes = useStyles();\n  const params = useParams();\n  const id =params.Id;\n  const isMountedRef = useIsMountedRef();\n  const [product, setProduct] = useState(null);\n\n  const getInvoices = useCallback(() => {\n    axios\n      .post(API_BASE_URL + 'product/edit',{id})\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProduct(response.data.product);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getInvoices();\n  }, [getInvoices]);\n\n  if (!product) {\n    return null;\n  }\n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Product Edit\"\n    >\n       <Header />\n      <Container maxWidth='md' style={{marginTop:'50px'}}>\n        <ProductCreateForm product={product} />\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProductCreateView;\n"],"sourceRoot":""}