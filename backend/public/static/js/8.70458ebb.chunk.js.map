{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","views/partners/edit partners/RegisterForm.js","views/partners/edit partners/Header.js","views/partners/edit partners/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","createSvgIcon","theme","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","ButtonBase","focusRipple","MoreHorizIcon","Breadcrumbs","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","ol","items","reduce","acc","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","renderItemsBeforeAndAfter","flexWrap","alignItems","margin","listStyle","userSelect","useStyles","makeStyles","RegisterForm","onSubmitSuccess","partner","rest","enqueueSnackbar","useSnackbar","id","useParams","partnerId","initialValues","username","location","email","password","percentage","payment","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","data","axios","post","API_BASE_URL","then","response","success","message","variant","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","type","role","Box","mt","Button","disabled","size","marginTop","actionIcon","Header","Grid","container","justify","item","fontSize","aria-label","Link","to","RouterLink","justifyContent","background","dark","flexDirection","RegisterView","history","useHistory","isMountedRef","useState","partners","setPartners","getPartners","useCallback","get","Page","title","Container","maxWidth","Card","align","my","Divider"],"mappings":"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","file":"static/js/8.70458ebb.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport { API_BASE_URL } from 'src/config';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction RegisterForm({ className, onSubmitSuccess, partner, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const params = useParams();\n  const id = params.partnerId;\n\n  return (\n    <Formik\n      initialValues={{\n        username: partner.username,\n        location:partner.location,\n        email: partner.email,\n        password: \"\",\n        percentage:partner.percentage,\n        payment:partner.payment\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string().max(255).required('partner name is required'),\n        location: Yup.string().max(255).required('location is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        percentage: Yup.number().required('percentage is required'),\n        payment: Yup.number().required('payment is required'),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          const {username, location, email, password, percentage, payment} =values;\n          var data ='';\n\n          await axios.post(API_BASE_URL+'partners/update', { id, username, location, email, password, percentage, payment})\n            .then((response) => {\n                data = response.data; \n            })\n            if(data.success)\n            {\n              setStatus({ success: true });\n              setSubmitting(false);   \n              enqueueSnackbar(data.message, {\n              variant: 'success',\n            });    }\n            else {\n              enqueueSnackbar(data.message, {\n                variant: 'error'\n              }); \n            }\n            onSubmitSuccess();\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.username && errors.username)}\n            fullWidth\n            helperText={touched.username && errors.username}\n            label=\"Partner Name\"\n            margin=\"normal\"\n            name=\"username\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"username\"\n            value={values.username}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.location && errors.location)}\n            fullWidth\n            helperText={touched.location && errors.location}\n            label=\"Location(country or city)\"\n            margin=\"normal\"\n            name=\"location\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"location\"\n            value={values.location}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          {(partner.role !== \"admin\") &&\n           <TextField\n            error={Boolean(touched.percentage && errors.percentage)}\n            fullWidth\n            helperText={touched.percentage && errors.percentage}\n            label=\"Percentage(%)\"\n            margin=\"normal\"\n            name=\"percentage\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"number\"\n            value={values.percentage}\n            variant=\"outlined\"\n          />\n          }\n          <TextField\n            error={Boolean(touched.payment && errors.payment)}\n            fullWidth\n            helperText={touched.payment && errors.payment}\n            label=\"Payment($)\"\n            margin=\"normal\"\n            name=\"payment\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"number\"\n            value={values.payment}\n            variant=\"outlined\"\n          />\n\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Update\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nRegisterForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nRegisterForm.default = {\n  onSubmitSuccess: () => {}\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Grid,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop:'15px',\n    marginLeft:'10px',\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Partners\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Edit Partner\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Please edit your partners info!\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport RegisterForm from './RegisterForm';\nimport Header from './Header';\nimport { API_BASE_URL } from 'src/config';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nfunction RegisterView() {\n  const classes = useStyles();\n  const history = useHistory();\n  const isMountedRef = useIsMountedRef();\n  const [partners, setPartners] = useState(null);\n  const params = useParams();\n  const id = params.partnerId;\n\n  const getPartners = useCallback(() => {\n    axios\n      .get(API_BASE_URL +'partners/edit/' + id)\n      .then((response) => {\n        if (isMountedRef.current) {\n          setPartners(response.data.partner);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPartners();\n  }, [getPartners]);\n\n  if (!partners) {\n    return null;\n  }\n\n\n  const handleSubmitSuccess = () => {\n    history.push('/app/partners/list');\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Partner edit\"\n    > \n       <Header />\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardContent>\n            <Typography\n              align='center'\n              variant=\"h2\"\n              color=\"textPrimary\"\n            >\n              Partner editing page\n            </Typography>\n            <Box mt={3}>\n              <RegisterForm partner={partners} onSubmitSuccess={handleSubmitSuccess} />\n            </Box>\n            <Box my={2}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/app/partners/list\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              go to partners list\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nexport default RegisterView;\n"],"sourceRoot":""}